/* region -----Root Elements-----*/
*, *::before, *::after{
    box-sizing: border-box;
}

body {
    font-family: 'Source Sans Pro', sans-serif;
    color: #404040;
    margin: 0;
}

section{
    margin: 0;
}
/*endregion*/

/* region -----Colors-----*/

*{
    --thistle: #cdb4dbff;
    --fairy-tale: #ffc8ddff;
    --carnation-pink: #ffafccff;
    --uranian-blue: #84C7FFff;
    --light-sky-blue: #4F779Eff;
}

/*endregion*/

  /* region -----Typography-----*/

/*
  Challenge: Set the initial styles for text
    - Set the h1 to a relative font-size value equal to 40px
    - Apply a text shadow to the h1 using the color value #816fca
    - Set the h2 to a relative font-size value equal to 36px
    - Give the h2 a top and bottom margin value in em equal to 6px
    - Set the paragraph to a relative font-size value equal to 18px
    - Set the p line-height to 1.35 times its font-size value
    - Give .subheading a bottom margin in em equal to half its font-size value
    - Set .beta-text and .subheading to appear in all-uppercase
*/

h1 {
    font-size: 2.5rem;
    font-weight: 400;
    text-shadow: 0 2px 2px #5e8ab7;
}

h2 {
    font-size: 2.25rem;
    margin: 0.167rem 0;
}

p{
    font-size: 1.125rem;
    line-height: 1.35;
}

.beta-text {
    order: 1;
    font-weight: 900;
    overflow: hidden;
    padding-bottom: 0.5em;
}

.subheading {
    color: #575757;
    font-weight: 900;
    margin-bottom: 0.5em;
}

.beta-text,
.subheading{
    text-transform: uppercase;
}

/*
  Challenge:
    Adjust the visual order of .top-text and re-distribute
    the space inside .intro:
      - Display .top-text above the h1 and align it to
        the top edge of the .intro section
      - Evenly distribute the content inside .intro
      - The top border of .top-text should match the width of the text
*/

.top-text {
    order: -1;
    font-size: 0.875rem;
    font-weight: 900;
    padding-top: 0.25em;
    border-top: 5px solid;
    margin: 0 auto;
}

.fine-print {
    font-size: 0.75rem;
    letter-spacing: 1px;
    color: #858585;
    text-align: center;
}
/*endregion*/

/* region -----Intro-----*/

/*
  Challenge: Style the .intro section
    - Convert into a flex container;
      display its content in a column
    - Set a minimum height of 250px
    - Center-align its content
    - Vertically center the content
    - Remove the space around the edges of the page
    - Set the background of .intro to the image `intro-bg.png`
    - The background image should scale to fill the entire
      width and height of .intro while preserving its ratio
*/

.main-content,
.intro{
    display: flex;
    flex-direction: column;
    padding-left: 2em;
    padding-right: 2em;
}

.intro {
    min-height: 250px;
    justify-content: space-between;
    text-align: center;
    color: #fff;
    background: var(--light-sky-blue) url("images/intro-bg-blue.png");
    background-size: cover;
}
/*endregion*/

/* region -----Main content-----*/

/*
  Challenge: Style the main content
    - Use flexbox to horizontally center all items inside
      .main-content. The <p> text should remain left-aligned.
    - Use em to give .main-content a top padding equal to 40px
      and a left and right padding equal to 32px.
    - Set the width of .img-main to 120px and display it as a rounded image.
*/

.main-content{
    align-items: center;
    padding-top: 2.5em;
}

.img-main{
    width: 120px;
    border-radius: 50%;
}

.main-content p,
form {
    max-width: 450px;
}

/*endregion*/

/* region -----Form-----*/

/*
  Challenge: Style the form inputs
    - Display each input on a separate line so they
      expand to the full width of their container
    - Use a bottom margin to create space between the input elements
    - Apply a padding in em that's equal to half the input's
      font-size to all 4 sides
    - Give the inputs a solid 2px border using the value #d1d5db
    - Round the corners of the input fields by 5px
    - On focus, update an inputâ€™s border color to #8a71ec
      and background color to #e6e8ec

    - The button should have the same font-family, width
      and border-radius of the input elements
    - Use the .btn selector to set the custom button styles;
      use the slide as a guide
    - Button colors:
      - Background: #8a71ec
      - Background on hover: #b7a7f6
*/

input,
.btn{
    width: 100%;
}

input{
    font-family: inherit;
    width: 100%;
    padding: 0.5em;
    margin-bottom: 0.75em;
    border: solid 2px #d1d5db;
    border-radius: 5px;
}
input:focus{
    outline: none;
    border-color: var(--light-sky-blue);
    background-color: #e6e8ec;
}

.btn{
    border-radius: 5px;
    border: none;
    letter-spacing: 1px;
    font-weight: bold;
    text-transform: uppercase;
    padding: 1em 0;
    cursor: pointer;
}
.btn-primary:hover, .btn-primary:focus{
    background-color:var(--uranian-blue);
}

.btn-primary{
    background-color: var(--light-sky-blue);
    color: white;
    margin-top: 1em;
}

/*endregion*/

/* region -----Media queries-----*/

/*
  Challenge: Adjust the layout for wider screens
    - Add a media query that targets a browser width of 576px or wider
    - Within the media query, convert the parent element of .intro and
      .main-content to a flex container
    - Set the width .intro and .main-content to exactly
      half the total width of their parent container
    - Expand the height of .intro so that it takes up
      the full height of the browser window
    - In the media query, increase the h1 font-size to
      a rem value equal to 52px
    - Increase the h2 font-size to a rem value equal to 42px
    - Increase the font-size of .beta-text to a
      rem value equal to 20px
*/

@media(min-width: 576px){
    body{
        display: flex;
        /*height: 100vh;*/
    }

    h1 {
        font-size:5vw;

    }

    h2 {
        font-size: 2.625rem;
    }

    .beta-text {
        font-size: 1.25rem;
    }

    .intro,
    .main-content{
        width: 50%;
    }

    .intro{
        height: 100vh;
    }

    .main-content{
        justify-content: center;
        padding-top: 0;
    }
}

/*endregion*/